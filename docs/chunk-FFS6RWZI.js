import{b}from"./chunk-NO6QHHJU.js";import{Ba as h,Da as g,Ga as C,Ha as w,I as m,Ia as y,Ja as v,M as l,Ma as D,Na as o,Oa as S,Qa as x,R as f,Ra as r,V as i,Xa as T,h as c,p,qa as u,ra as a}from"./chunk-2C7DZUQU.js";function P(e,I){e&1&&o(0,` Deadline reached
`)}function j(e,I){if(e&1&&o(0),e&2){let t=D();S(" Seconds left to deadline: ",t.secondsLeft,`
`)}}var _=(()=>{class e{constructor(t){this._cdr=t,this.isDeadlineReached=!1}ngOnInit(){this.updateTimer()}updateTimer(){this.secondsLeft&&setTimeout(()=>{this.secondsLeft--,this.isDeadlineReached=this.secondsLeft===0,this._cdr.detectChanges(),this.updateTimer()},1e3)}static{this.\u0275fac=function(n){return new(n||e)(a(T))}}static{this.\u0275cmp=i({type:e,selectors:[["app-countdown-timer"]],inputs:{secondsLeft:"secondsLeft"},standalone:!0,features:[r],decls:2,vars:1,template:function(n,d){n&1&&h(0,P,1,0)(1,j,1,1),n&2&&C(0,d.isDeadlineReached?0:1)},styles:["[_nghost-%COMP%]{font-size:20px;font-weight:700}"],changeDetection:0})}}return e})();var s=(()=>{class e{constructor(t){this.http=t,this.apiUrl="/api/deadline"}getDeadlineSeconds(){return this.http.get(this.apiUrl).pipe(p(t=>t.secondsLeft))}static{this.\u0275fac=function(n){return new(n||e)(f(b))}}static{this.\u0275prov=l({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})();var U=(()=>{class e{constructor(t){this.countdownPageService=t,this._destroy$=new c}ngOnInit(){this.countdownPageService.getDeadlineSeconds().pipe(m(this._destroy$)).subscribe(t=>{this.initialSecondsLeft=t})}ngOnDestroy(){this._destroy$.next(),this._destroy$.complete()}static{this.\u0275fac=function(n){return new(n||e)(a(s))}}static{this.\u0275cmp=i({type:e,selectors:[["app-countdown-page"]],standalone:!0,features:[x([s]),r],decls:3,vars:1,consts:[[3,"secondsLeft"]],template:function(n,d){n&1&&(w(0,"p"),o(1,` There is an API endpoint called /api/deadline which returns secondsLeft: number JSON object containing the number of seconds left to some constant deadline date (deadline date never changes). Write an Angular component (and any other Angular classes/functions if needed) that will retrieve data from backend and will display \u201CSeconds left to deadline: X\u201D countdown timer (X should be updated every second). Please take your time to write performance optimized code that could be then copy-pasted into some bigger Angular project.
`),y(),v(2,"app-countdown-timer",0)),n&2&&(u(2),g("secondsLeft",d.initialSecondsLeft))},dependencies:[_],changeDetection:0})}}return e})();export{U as CountdownPageComponent};
